@page "/profile"
@using BlazorA.Service;
@using Yummy.Models;
@inject IAuthProductServices productServices;
@inject NavigationManager NavigationManager;
@inject AuthenticationStateProvider AuthenticationStateProvider
@layout UserLayout
<PageTitle>Profile</PageTitle>

<main id="main" class="main" style="padding-top:50px">
    <section class="section profile">
        <div class="row">
            <div class="col-lg-8" style="margin:auto">
                <div class="card">
                    <div class="card-body pt-3">
                        <div class="card-body profile-card pt-4 d-flex flex-column align-items-center">
                            @if (Isexist == true)
                            {
                                @foreach (var pr in address2)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(pr.ImageData)" alt="Profile" class="rounded-circle" style="width:130px; height:150px">
                                }
                            }
                            else
                            {
                                <img src="assets/img/download.jpeg" alt="Profile" class="rounded-circle" style="width:130px">
                            }
                            <AuthorizeView>
                                <Authorized>
                                    <h2>@context.User.FindFirst("FullName")?.Value</h2>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                        <ul class="nav nav-tabs nav-tabs-bordered" style="font-size:17px">

                            <li class="nav-item">
                                <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#profile-overview">Overview</button>
                            </li>
                            @if (Isexist == false)
                            {
                                <li class="nav-item">
                                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-Add">Complete Profile</button>
                                </li>
                            }
                            <li class="nav-item">
                                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-Edit">Edit Profile</button>
                            </li>
                        </ul>
                        <div class="tab-content pt-2" style="padding-bottom:15px;font-size:17px;">
                            <div class="tab-pane fade show active profile-overview" id="profile-overview">
                                <h5 class="card-title" style="padding:10px 0px 3px 0px;font-size:22px;">Profile Details</h5>
                                <AuthorizeView>
                                    <Authorized>
                                        <div class="row">
                                            <div class="col-lg-3 col-md-4 label ">Full Name</div>
                                            <div class="col-lg-9 col-md-8">@context.User.FindFirst("FullName")?.Value</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-3 col-md-4 label">Email</div>
                                            <div class="col-lg-9 col-md-8">@context.User.Identity.Name</div>
                                        </div>
                                    </Authorized>
                                </AuthorizeView>
                                @if (Isexist == true)
                                {
                                    @foreach (var pro in address2)
                                    {
                                        <div class="row">
                                            <div class="col-lg-3 col-md-4 label">Country</div>
                                            <div class="col-lg-9 col-md-8">@pro.Country</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-3 col-md-4 label">Street</div>
                                            <div class="col-lg-9 col-md-8">@pro.Street</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-3 col-md-4 label">Zip Code</div>
                                            <div class="col-lg-9 col-md-8">@pro.ZipCode</div>
                                        </div>
                                    }
                                }
                            </div>
                            <div class="tab-pane fade profile-edit pt-3" id="profile-Add">
                                <!-- Profile Add Form -->
                                <EditForm Model="@address" OnValidSubmit="HandleValidSubmit">
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            <img src="assets/img/download.jpeg" alt="Profile" class="rounded-circle" style="width:130px">
                                            <div class="pt-2">
                                                <InputFile OnChange="LoadFilesComplete" class="btn btn-primary btn-sm" title="Upload new profile image"><i class="bi bi-upload"></i></InputFile>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mb-3">

                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="address.Country" name="country" type="text" class="form-control" placeholder="Country" id="country" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="address.Street" name="Street" type="text" class="form-control" placeholder="Street" id="Street" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="address.ZipCode" name="zipcode" type="text" class="form-control" placeholder="Zip code" id="zipcode" />
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-primary">Save Changes</button>
                                    </div>
                                </EditForm><!-- End Profile Add Form -->
                            </div>
                            <div class="tab-pane fade profile-edit pt-3" id="profile-Edit">
                                <!-- Profile Add Form -->
                                <EditForm Model="@addressupdate" OnValidSubmit="UpdateProfile">
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            @if (Isexist == true)
                                            {
                                                @foreach (var pr in address2)
                                                {
                                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(pr.ImageData)" alt="Profile" class="rounded-circle" style="width:130px; height:150px">
                                                }
                                            }
                                            else
                                            {
                                                <img src="assets/img/download.jpeg" alt="Profile" class="rounded-circle" style="width:130px">
                                            }
                                            <div class="pt-2">
                                                <InputFile OnChange="LoadFilesUpdate" class="btn btn-primary btn-sm" title="Upload new profile image"><i class="bi bi-upload"></i></InputFile>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mb-3">

                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="addressupdate.Country" name="country" type="text" class="form-control" placeholder="Country" id="country" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="addressupdate.Street" name="Street" type="text" class="form-control" placeholder="Street" id="Street" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-8 col-lg-9">
                                            <InputText @bind-Value="addressupdate.ZipCode" name="zipcode" type="text" class="form-control" placeholder="Zip code" id="zipcode" />
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-primary">Save Changes</button>
                                    </div>
                                </EditForm><!-- End Profile Add Form -->
                            </div>
                            <div class="tab-pane fade pt-3" id="profile-settings">
                            </div>
                        </div><!-- End Bordered Tabs -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>
@code {
    [Parameter]
    public string Email { get; set; }
    private List<Address> address2 = new List<Address>();
    private Address address = new Address();
    private Address addressupdate = new Address();
    private LoginModel userAccount = new LoginModel();
    bool Isexist;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            Email = user.Identity.Name;
        }
        Isexist = await GetListofAddress();
    }
    protected async Task<bool> GetListofAddress()
    {
        userAccount = await productServices.CheckLogin(Email);
        if (userAccount != null)
        {
            address2 = await productServices.GetAddressforuser(userAccount.User_Id);
            if (address2 == null)
            {
                return false;
            }
            else
            {
                @foreach (var pro in address2)
                {
                    addressupdate.Country = pro.Country;
                    addressupdate.Street = pro.Street;
                    addressupdate.ZipCode = pro.ZipCode;
                }
                return true;
            }
        }
        else
        {
            return false;
        }
    }
    private async Task LoadFilesComplete(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var memoryStream = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(memoryStream);
                address.ImageData = memoryStream.ToArray();
            }
        }
    }    private async Task LoadFilesUpdate(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using (var memoryStream = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(memoryStream);
                addressupdate.ImageData = memoryStream.ToArray();
            }
        }
    }
    private async Task HandleValidSubmit()
    {
        address.User_ID = userAccount.User_Id;
        await productServices.Completeprofile(address);
        NavigationManager.NavigateTo("/home");
    }
    private async Task UpdateProfile()
    {
        addressupdate.User_ID = userAccount.User_Id;
        await productServices.UpdateProfile(addressupdate);
    }
}